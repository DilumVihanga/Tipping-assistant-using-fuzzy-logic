# -*- coding: utf-8 -*-
"""Tipping_Assistant_using_fuzzy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xwhCHT2NHCV9XtZg_zarncC4CHLEbJ1j
"""

# Install scikit-fuzzy
!pip install -U scikit-fuzzy

# Import required libraries
import numpy as np
import skfuzzy as fuzz
from skfuzzy import control as ctrl

# Define the input variables
quality = ctrl.Antecedent(np.arange(0, 11, 1), 'quality')
service = ctrl.Antecedent(np.arange(0, 11, 1), 'service')
tip = ctrl.Consequent(np.arange(0, 26, 1), 'tip')

# Define the membership functions for the input variables
quality['poor'] = fuzz.trimf(quality.universe, [0, 0, 5])
quality['average'] = fuzz.trimf(quality.universe, [0, 5, 10])
quality['good'] = fuzz.trimf(quality.universe, [5, 10, 10])

service['poor'] = fuzz.trimf(service.universe, [0, 0, 5])
service['average'] = fuzz.trimf(service.universe, [0, 5, 10])
service['good'] = fuzz.trimf(service.universe, [5, 10, 10])

tip['low'] = fuzz.trimf(tip.universe, [0, 0, 13])
tip['medium'] = fuzz.trimf(tip.universe, [0, 13, 25])
tip['high'] = fuzz.trimf(tip.universe, [13, 25, 25])

# Define the fuzzy rules
rule1 = ctrl.Rule(quality['poor'] | service['poor'], tip['low'])
rule2 = ctrl.Rule(quality['average'], tip['medium'])
rule3 = ctrl.Rule(quality['good'] | service['good'], tip['high'])

# Create the fuzzy control system
tipping_ctrl = ctrl.ControlSystem([rule1, rule2, rule3])
tipping = ctrl.ControlSystemSimulation(tipping_ctrl)

# Prompt the user to input values for quality and service
quality_input = float(input("Enter the quality rating (0-10): "))
service_input = float(input("Enter the service rating (0-10): "))

# Set the input values
tipping.input['quality'] = quality_input
tipping.input['service'] = service_input

# Evaluate the fuzzy system
tipping.compute()

# Print the output value (the recommended tip percentage)
print(f"Recommended tip percentage: {tipping.output['tip']:.2f}%")